#!/bin/sh
{{ ansible_managed | comment(decoration='#')}}

#
# Inspired by https://github.com/jeroenh/signzone/blob/master/signzone.sh
# and https://www.digitalocean.com/community/tutorials/how-to-set-up-dnssec-on-an-nsd-nameserver-on-ubuntu-14-04
# Thanks Jeroen van der Ham and Digital Ocean

function get_key_filenames {
  local DIR_TO_IT=$1

  # lists folder, and strips .key of filename and replaces newlines with space.
  return ls keys/KSK/*.key | sort | xargs -I {} bash -c 'echo "$(basename {})" | sed "s/.key//g" | awk 1 ORS=" "';
}

PDIR=`pwd`
ZONEDIR="{{ nsd_server_zones_dir }}" # location of your zone files
KEYDIR="{{ nsd_server_dnssec_key_dir }}" # location of your key files

DOMAIN=$1

TODAY=$(date "+%Y%m%d")
EXPIRE=$(date -d "1 month 7 days" "+%Y%m%d")

cd $KEYDIR/KSK

# get KSK list from keys/KSK
KSKS=$(get_key_filenames $(pwd))
# KSK=$(basename $(grep -r "`grep '(ksk)' $DOMAIN.zone.signed | cut -f3-10`" K$DOMAIN.*.key | cut -d':' -f1) .key)

# get ZSK list from keys/KSK
cd $KEYDIR/ZSK
ZSKS=$(get_key_filenames $(pwd))
# ZSK=$(basename $(grep -r "`grep '(zsk)' $DOMAIN.zone.signed | cut -f3-10`" K$DOMAIN.*.key | cut -d':' -f1) .key)

# -b adds debug
# -i sets inception
# -e sets expire
# -n sets NSEC3
# -s set salt
# the rest is self explanatory

$ZSK

cd $ZONEDIR
/usr/bin/ldns-signzone -b -i $TODAY -e $EXPIRE -n -s $(head -n 1000 /dev/random | sha1sum | cut -b 1-16) -f $ZONEDIR/$DOMAIN.zone.signed $DOMAIN.zone $ZSKS $KSKS
/usr/sbin/nsd-control reload $DOMAIN

# no zone transfer necessary at this point
# so skipping
cd $PDIR
#/USR/SBIN/NSD-CONTROL NOTIFY $DOMAIN
